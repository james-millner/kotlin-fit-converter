[{"name":"IMPERIAL","description":"kjm.fit.converter.utils.measurements.MeasurementUnit.IMPERIAL","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-unit/-i-m-p-e-r-i-a-l/index.html","searchKeys":["IMPERIAL","IMPERIAL","kjm.fit.converter.utils.measurements.MeasurementUnit.IMPERIAL"]},{"name":"METRIC","description":"kjm.fit.converter.utils.measurements.MeasurementUnit.METRIC","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-unit/-m-e-t-r-i-c/index.html","searchKeys":["METRIC","METRIC","kjm.fit.converter.utils.measurements.MeasurementUnit.METRIC"]},{"name":"abstract fun convert(source: S): T","description":"kjm.fit.converter.converters.Converter.convert","location":"kotlin-fit-converter-lib/kjm.fit.converter.converters/-converter/convert.html","searchKeys":["convert","abstract fun convert(source: S): T","kjm.fit.converter.converters.Converter.convert"]},{"name":"class ConversionService","description":"kjm.fit.converter.converters.ConversionService","location":"kotlin-fit-converter-lib/kjm.fit.converter.converters/-conversion-service/index.html","searchKeys":["ConversionService","class ConversionService","kjm.fit.converter.converters.ConversionService"]},{"name":"class KFitDataClassHandler","description":"kjm.fit.converter.KFitDataClassHandler","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-data-class-handler/index.html","searchKeys":["KFitDataClassHandler","class KFitDataClassHandler","kjm.fit.converter.KFitDataClassHandler"]},{"name":"class KFitJsonHandler","description":"kjm.fit.converter.KFitJsonHandler","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-json-handler/index.html","searchKeys":["KFitJsonHandler","class KFitJsonHandler","kjm.fit.converter.KFitJsonHandler"]},{"name":"class KFitProtobufHandler","description":"kjm.fit.converter.KFitProtobufHandler","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-protobuf-handler/index.html","searchKeys":["KFitProtobufHandler","class KFitProtobufHandler","kjm.fit.converter.KFitProtobufHandler"]},{"name":"class MeasurementUtils","description":"kjm.fit.converter.utils.measurements.MeasurementUtils","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-utils/index.html","searchKeys":["MeasurementUtils","class MeasurementUtils","kjm.fit.converter.utils.measurements.MeasurementUtils"]},{"name":"class ProtoBufSchemaBuilder","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-builder/index.html","searchKeys":["ProtoBufSchemaBuilder","class ProtoBufSchemaBuilder","kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder"]},{"name":"constructor()","description":"kjm.fit.converter.KFitDataClassHandler.KFitDataClassHandler","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-data-class-handler/-k-fit-data-class-handler.html","searchKeys":["KFitDataClassHandler","constructor()","kjm.fit.converter.KFitDataClassHandler.KFitDataClassHandler"]},{"name":"constructor()","description":"kjm.fit.converter.KFitJsonHandler.KFitJsonHandler","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-json-handler/-k-fit-json-handler.html","searchKeys":["KFitJsonHandler","constructor()","kjm.fit.converter.KFitJsonHandler.KFitJsonHandler"]},{"name":"constructor()","description":"kjm.fit.converter.KFitProtobufHandler.KFitProtobufHandler","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-protobuf-handler/-k-fit-protobuf-handler.html","searchKeys":["KFitProtobufHandler","constructor()","kjm.fit.converter.KFitProtobufHandler.KFitProtobufHandler"]},{"name":"constructor()","description":"kjm.fit.converter.converters.ConversionService.ConversionService","location":"kotlin-fit-converter-lib/kjm.fit.converter.converters/-conversion-service/-conversion-service.html","searchKeys":["ConversionService","constructor()","kjm.fit.converter.converters.ConversionService.ConversionService"]},{"name":"constructor()","description":"kjm.fit.converter.utils.measurements.MeasurementUtils.MeasurementUtils","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-utils/-measurement-utils.html","searchKeys":["MeasurementUtils","constructor()","kjm.fit.converter.utils.measurements.MeasurementUtils.MeasurementUtils"]},{"name":"constructor()","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.ProtoBufSchemaBuilder","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-builder/-proto-buf-schema-builder.html","searchKeys":["ProtoBufSchemaBuilder","constructor()","kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.ProtoBufSchemaBuilder"]},{"name":"constructor(activityName: String, activityStartDateTime: String, sport: String, averageHR: Double?, maxHR: Double?, averageCadence: Double?, averagePower: Double?, maxPower: Double?, averageCalories: Double?, averageSpeed: Double?, maxSpeed: Double?, averageTemperature: Double?, totalAscent: Int?, totalDescent: Int?, totalDistance: Double?, productsUsed: Set<FitProduct> = emptySet(), events: Set<FitEvent> = emptySet(), locationRecords: Set<LocationRecord> = emptySet())","description":"kjm.fit.converter.out.models.FitFileData.FitFileData","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/-fit-file-data.html","searchKeys":["FitFileData","constructor(activityName: String, activityStartDateTime: String, sport: String, averageHR: Double?, maxHR: Double?, averageCadence: Double?, averagePower: Double?, maxPower: Double?, averageCalories: Double?, averageSpeed: Double?, maxSpeed: Double?, averageTemperature: Double?, totalAscent: Int?, totalDescent: Int?, totalDistance: Double?, productsUsed: Set<FitProduct> = emptySet(), events: Set<FitEvent> = emptySet(), locationRecords: Set<LocationRecord> = emptySet())","kjm.fit.converter.out.models.FitFileData.FitFileData"]},{"name":"constructor(heartRate: Double?, cadence: Double?, power: Double?, location: Location?, temperature: Double?, speed: Double?, elevation: Double?, timestamp: String, distance: Double?, zone: Short?)","description":"kjm.fit.converter.out.models.LocationRecord.LocationRecord","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/-location-record.html","searchKeys":["LocationRecord","constructor(heartRate: Double?, cadence: Double?, power: Double?, location: Location?, temperature: Double?, speed: Double?, elevation: Double?, timestamp: String, distance: Double?, zone: Short?)","kjm.fit.converter.out.models.LocationRecord.LocationRecord"]},{"name":"constructor(latitude: Double, longitude: Double, altitude: Float?, grade: Double?, gpsAccuracy: Double?)","description":"kjm.fit.converter.out.models.Location.Location","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location/-location.html","searchKeys":["Location","constructor(latitude: Double, longitude: Double, altitude: Float?, grade: Double?, gpsAccuracy: Double?)","kjm.fit.converter.out.models.Location.Location"]},{"name":"constructor(productName: String, productDataConnection: String?, manufacturer: String, description: String?)","description":"kjm.fit.converter.out.models.FitProduct.FitProduct","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-product/-fit-product.html","searchKeys":["FitProduct","constructor(productName: String, productDataConnection: String?, manufacturer: String, description: String?)","kjm.fit.converter.out.models.FitProduct.FitProduct"]},{"name":"constructor(timestamp: String?, eventType: String?, eventName: String, frontGearNum: Int?, rearGearNum: Int?)","description":"kjm.fit.converter.out.models.FitEvent.FitEvent","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-event/-fit-event.html","searchKeys":["FitEvent","constructor(timestamp: String?, eventType: String?, eventName: String, frontGearNum: Int?, rearGearNum: Int?)","kjm.fit.converter.out.models.FitEvent.FitEvent"]},{"name":"data class FitEvent(val timestamp: String?, val eventType: String?, val eventName: String, val frontGearNum: Int?, val rearGearNum: Int?)","description":"kjm.fit.converter.out.models.FitEvent","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-event/index.html","searchKeys":["FitEvent","data class FitEvent(val timestamp: String?, val eventType: String?, val eventName: String, val frontGearNum: Int?, val rearGearNum: Int?)","kjm.fit.converter.out.models.FitEvent"]},{"name":"data class FitFileData(val activityName: String, val activityStartDateTime: String, val sport: String, val averageHR: Double?, val maxHR: Double?, val averageCadence: Double?, val averagePower: Double?, val maxPower: Double?, val averageCalories: Double?, val averageSpeed: Double?, val maxSpeed: Double?, val averageTemperature: Double?, val totalAscent: Int?, val totalDescent: Int?, val totalDistance: Double?, val productsUsed: Set<FitProduct> = emptySet(), val events: Set<FitEvent> = emptySet(), val locationRecords: Set<LocationRecord> = emptySet())","description":"kjm.fit.converter.out.models.FitFileData","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/index.html","searchKeys":["FitFileData","data class FitFileData(val activityName: String, val activityStartDateTime: String, val sport: String, val averageHR: Double?, val maxHR: Double?, val averageCadence: Double?, val averagePower: Double?, val maxPower: Double?, val averageCalories: Double?, val averageSpeed: Double?, val maxSpeed: Double?, val averageTemperature: Double?, val totalAscent: Int?, val totalDescent: Int?, val totalDistance: Double?, val productsUsed: Set<FitProduct> = emptySet(), val events: Set<FitEvent> = emptySet(), val locationRecords: Set<LocationRecord> = emptySet())","kjm.fit.converter.out.models.FitFileData"]},{"name":"data class FitProduct(val productName: String, val productDataConnection: String?, val manufacturer: String, val description: String?)","description":"kjm.fit.converter.out.models.FitProduct","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-product/index.html","searchKeys":["FitProduct","data class FitProduct(val productName: String, val productDataConnection: String?, val manufacturer: String, val description: String?)","kjm.fit.converter.out.models.FitProduct"]},{"name":"data class Location(val latitude: Double, val longitude: Double, val altitude: Float?, val grade: Double?, val gpsAccuracy: Double?)","description":"kjm.fit.converter.out.models.Location","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location/index.html","searchKeys":["Location","data class Location(val latitude: Double, val longitude: Double, val altitude: Float?, val grade: Double?, val gpsAccuracy: Double?)","kjm.fit.converter.out.models.Location"]},{"name":"data class LocationRecord(val heartRate: Double?, val cadence: Double?, val power: Double?, val location: Location?, val temperature: Double?, val speed: Double?, val elevation: Double?, val timestamp: String, val distance: Double?, val zone: Short?)","description":"kjm.fit.converter.out.models.LocationRecord","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/index.html","searchKeys":["LocationRecord","data class LocationRecord(val heartRate: Double?, val cadence: Double?, val power: Double?, val location: Location?, val temperature: Double?, val speed: Double?, val elevation: Double?, val timestamp: String, val distance: Double?, val zone: Short?)","kjm.fit.converter.out.models.LocationRecord"]},{"name":"enum MeasurementUnit : Enum<MeasurementUnit> ","description":"kjm.fit.converter.utils.measurements.MeasurementUnit","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-unit/index.html","searchKeys":["MeasurementUnit","enum MeasurementUnit : Enum<MeasurementUnit> ","kjm.fit.converter.utils.measurements.MeasurementUnit"]},{"name":"enum ProtoVersion : Enum<ProtoBufSchemaGenerator.ProtoVersion> ","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/-proto-version/index.html","searchKeys":["ProtoVersion","enum ProtoVersion : Enum<ProtoBufSchemaGenerator.ProtoVersion> ","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion"]},{"name":"fun <S, T> addConverter(converter: Converter<S, T>)","description":"kjm.fit.converter.converters.ConversionService.addConverter","location":"kotlin-fit-converter-lib/kjm.fit.converter.converters/-conversion-service/add-converter.html","searchKeys":["addConverter","fun <S, T> addConverter(converter: Converter<S, T>)","kjm.fit.converter.converters.ConversionService.addConverter"]},{"name":"fun <S, T> canConvert(sourceType: Class<S>, targetType: Class<T>): Boolean","description":"kjm.fit.converter.converters.ConversionService.canConvert","location":"kotlin-fit-converter-lib/kjm.fit.converter.converters/-conversion-service/can-convert.html","searchKeys":["canConvert","fun <S, T> canConvert(sourceType: Class<S>, targetType: Class<T>): Boolean","kjm.fit.converter.converters.ConversionService.canConvert"]},{"name":"fun <S, T> convert(source: S, targetType: Class<T>): T?","description":"kjm.fit.converter.converters.ConversionService.convert","location":"kotlin-fit-converter-lib/kjm.fit.converter.converters/-conversion-service/convert.html","searchKeys":["convert","fun <S, T> convert(source: S, targetType: Class<T>): T?","kjm.fit.converter.converters.ConversionService.convert"]},{"name":"fun build(): String","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.build","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-builder/build.html","searchKeys":["build","fun build(): String","kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.build"]},{"name":"fun convertFitToJSON(fileLocation: String, metricSystem: Boolean, source: InputStream): String","description":"kjm.fit.converter.KFitJsonHandler.convertFitToJSON","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-json-handler/convert-fit-to-j-s-o-n.html","searchKeys":["convertFitToJSON","fun convertFitToJSON(fileLocation: String, metricSystem: Boolean, source: InputStream): String","kjm.fit.converter.KFitJsonHandler.convertFitToJSON"]},{"name":"fun convertFitToProtobufByteArray(fileName: String, metricSystem: Boolean, source: InputStream): ByteArray","description":"kjm.fit.converter.KFitProtobufHandler.convertFitToProtobufByteArray","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-protobuf-handler/convert-fit-to-protobuf-byte-array.html","searchKeys":["convertFitToProtobufByteArray","fun convertFitToProtobufByteArray(fileName: String, metricSystem: Boolean, source: InputStream): ByteArray","kjm.fit.converter.KFitProtobufHandler.convertFitToProtobufByteArray"]},{"name":"fun convertFitToProtobufHexString(fileName: String, metricSystem: Boolean, source: InputStream): String","description":"kjm.fit.converter.KFitProtobufHandler.convertFitToProtobufHexString","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-protobuf-handler/convert-fit-to-protobuf-hex-string.html","searchKeys":["convertFitToProtobufHexString","fun convertFitToProtobufHexString(fileName: String, metricSystem: Boolean, source: InputStream): String","kjm.fit.converter.KFitProtobufHandler.convertFitToProtobufHexString"]},{"name":"fun convertJSONToFitData(jsonString: String): FitFileData","description":"kjm.fit.converter.KFitJsonHandler.convertJSONToFitData","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-json-handler/convert-j-s-o-n-to-fit-data.html","searchKeys":["convertJSONToFitData","fun convertJSONToFitData(jsonString: String): FitFileData","kjm.fit.converter.KFitJsonHandler.convertJSONToFitData"]},{"name":"fun convertProtobufByteArrayToFit(protoBuf: ByteArray): FitFileData","description":"kjm.fit.converter.KFitProtobufHandler.convertProtobufByteArrayToFit","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-protobuf-handler/convert-protobuf-byte-array-to-fit.html","searchKeys":["convertProtobufByteArrayToFit","fun convertProtobufByteArrayToFit(protoBuf: ByteArray): FitFileData","kjm.fit.converter.KFitProtobufHandler.convertProtobufByteArrayToFit"]},{"name":"fun convertProtobufHexToFit(protoBuf: String): FitFileData","description":"kjm.fit.converter.KFitProtobufHandler.convertProtobufHexToFit","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-protobuf-handler/convert-protobuf-hex-to-fit.html","searchKeys":["convertProtobufHexToFit","fun convertProtobufHexToFit(protoBuf: String): FitFileData","kjm.fit.converter.KFitProtobufHandler.convertProtobufHexToFit"]},{"name":"fun convertToDataClass(fileName: String, metricSystem: Boolean, source: InputStream): FitFileData","description":"kjm.fit.converter.KFitDataClassHandler.convertToDataClass","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-data-class-handler/convert-to-data-class.html","searchKeys":["convertToDataClass","fun convertToDataClass(fileName: String, metricSystem: Boolean, source: InputStream): FitFileData","kjm.fit.converter.KFitDataClassHandler.convertToDataClass"]},{"name":"fun descriptor(descriptor: SerialDescriptor)","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.descriptor","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-builder/descriptor.html","searchKeys":["descriptor","fun descriptor(descriptor: SerialDescriptor)","kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.descriptor"]},{"name":"fun distanceInRequestedUnit(meters: Float, requestedUnit: MeasurementUnit): Double","description":"kjm.fit.converter.utils.measurements.MeasurementUtils.distanceInRequestedUnit","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-utils/distance-in-requested-unit.html","searchKeys":["distanceInRequestedUnit","fun distanceInRequestedUnit(meters: Float, requestedUnit: MeasurementUnit): Double","kjm.fit.converter.utils.measurements.MeasurementUtils.distanceInRequestedUnit"]},{"name":"fun durationInRequestedUnit(metersPerSecond: Float, requestedUnit: MeasurementUnit): Double","description":"kjm.fit.converter.utils.measurements.MeasurementUtils.durationInRequestedUnit","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-utils/duration-in-requested-unit.html","searchKeys":["durationInRequestedUnit","fun durationInRequestedUnit(metersPerSecond: Float, requestedUnit: MeasurementUnit): Double","kjm.fit.converter.utils.measurements.MeasurementUtils.durationInRequestedUnit"]},{"name":"fun elevationInRequestedUnit(meters: Int, requestedUnit: MeasurementUnit): Int","description":"kjm.fit.converter.utils.measurements.MeasurementUtils.elevationInRequestedUnit","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-utils/elevation-in-requested-unit.html","searchKeys":["elevationInRequestedUnit","fun elevationInRequestedUnit(meters: Int, requestedUnit: MeasurementUnit): Int","kjm.fit.converter.utils.measurements.MeasurementUtils.elevationInRequestedUnit"]},{"name":"fun generateProtoBufSchema(block: ProtoBufSchemaBuilder.() -> Unit): String","description":"kjm.fit.converter.utils.proto.generateProtoBufSchema","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/generate-proto-buf-schema.html","searchKeys":["generateProtoBufSchema","fun generateProtoBufSchema(block: ProtoBufSchemaBuilder.() -> Unit): String","kjm.fit.converter.utils.proto.generateProtoBufSchema"]},{"name":"fun generateSchemaText(descriptors: List<SerialDescriptor>, packageName: String? = null, options: Map<String, String> = emptyMap(), protoVersion: ProtoBufSchemaGenerator.ProtoVersion = ProtoVersion.v2): String","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.generateSchemaText","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/generate-schema-text.html","searchKeys":["generateSchemaText","fun generateSchemaText(descriptors: List<SerialDescriptor>, packageName: String? = null, options: Map<String, String> = emptyMap(), protoVersion: ProtoBufSchemaGenerator.ProtoVersion = ProtoVersion.v2): String","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.generateSchemaText"]},{"name":"fun getProtoBufSchema(protoVersion: ProtoBufSchemaGenerator.ProtoVersion): String","description":"kjm.fit.converter.KFitProtobufHandler.getProtoBufSchema","location":"kotlin-fit-converter-lib/kjm.fit.converter/-k-fit-protobuf-handler/get-proto-buf-schema.html","searchKeys":["getProtoBufSchema","fun getProtoBufSchema(protoVersion: ProtoBufSchemaGenerator.ProtoVersion): String","kjm.fit.converter.KFitProtobufHandler.getProtoBufSchema"]},{"name":"fun option(name: String, value: String)","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.option","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-builder/option.html","searchKeys":["option","fun option(name: String, value: String)","kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.option"]},{"name":"fun packageName(name: String)","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.packageName","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-builder/package-name.html","searchKeys":["packageName","fun packageName(name: String)","kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.packageName"]},{"name":"fun protoVersion(version: ProtoBufSchemaGenerator.ProtoVersion)","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.protoVersion","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-builder/proto-version.html","searchKeys":["protoVersion","fun protoVersion(version: ProtoBufSchemaGenerator.ProtoVersion)","kjm.fit.converter.utils.proto.ProtoBufSchemaBuilder.protoVersion"]},{"name":"fun temperatureInRequestedUnit(temperature: Double, requestedUnit: MeasurementUnit): Double","description":"kjm.fit.converter.utils.measurements.MeasurementUtils.temperatureInRequestedUnit","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-utils/temperature-in-requested-unit.html","searchKeys":["temperatureInRequestedUnit","fun temperatureInRequestedUnit(temperature: Double, requestedUnit: MeasurementUnit): Double","kjm.fit.converter.utils.measurements.MeasurementUtils.temperatureInRequestedUnit"]},{"name":"fun valueOf(value: String): MeasurementUnit","description":"kjm.fit.converter.utils.measurements.MeasurementUnit.valueOf","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-unit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MeasurementUnit","kjm.fit.converter.utils.measurements.MeasurementUnit.valueOf"]},{"name":"fun valueOf(value: String): ProtoBufSchemaGenerator.ProtoVersion","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.valueOf","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/-proto-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ProtoBufSchemaGenerator.ProtoVersion","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.valueOf"]},{"name":"fun values(): Array<MeasurementUnit>","description":"kjm.fit.converter.utils.measurements.MeasurementUnit.values","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-unit/values.html","searchKeys":["values","fun values(): Array<MeasurementUnit>","kjm.fit.converter.utils.measurements.MeasurementUnit.values"]},{"name":"fun values(): Array<ProtoBufSchemaGenerator.ProtoVersion>","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.values","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/-proto-version/values.html","searchKeys":["values","fun values(): Array<ProtoBufSchemaGenerator.ProtoVersion>","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.values"]},{"name":"interface Converter<S, T>","description":"kjm.fit.converter.converters.Converter","location":"kotlin-fit-converter-lib/kjm.fit.converter.converters/-converter/index.html","searchKeys":["Converter","interface Converter<S, T>","kjm.fit.converter.converters.Converter"]},{"name":"object ProtoBufSchemaGenerator","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/index.html","searchKeys":["ProtoBufSchemaGenerator","object ProtoBufSchemaGenerator","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator"]},{"name":"v2","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.v2","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/-proto-version/v2/index.html","searchKeys":["v2","v2","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.v2"]},{"name":"v3","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.v3","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/-proto-version/v3/index.html","searchKeys":["v3","v3","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.v3"]},{"name":"val activityName: String","description":"kjm.fit.converter.out.models.FitFileData.activityName","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/activity-name.html","searchKeys":["activityName","val activityName: String","kjm.fit.converter.out.models.FitFileData.activityName"]},{"name":"val activityStartDateTime: String","description":"kjm.fit.converter.out.models.FitFileData.activityStartDateTime","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/activity-start-date-time.html","searchKeys":["activityStartDateTime","val activityStartDateTime: String","kjm.fit.converter.out.models.FitFileData.activityStartDateTime"]},{"name":"val altitude: Float?","description":"kjm.fit.converter.out.models.Location.altitude","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location/altitude.html","searchKeys":["altitude","val altitude: Float?","kjm.fit.converter.out.models.Location.altitude"]},{"name":"val averageCadence: Double?","description":"kjm.fit.converter.out.models.FitFileData.averageCadence","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/average-cadence.html","searchKeys":["averageCadence","val averageCadence: Double?","kjm.fit.converter.out.models.FitFileData.averageCadence"]},{"name":"val averageCalories: Double?","description":"kjm.fit.converter.out.models.FitFileData.averageCalories","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/average-calories.html","searchKeys":["averageCalories","val averageCalories: Double?","kjm.fit.converter.out.models.FitFileData.averageCalories"]},{"name":"val averageHR: Double?","description":"kjm.fit.converter.out.models.FitFileData.averageHR","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/average-h-r.html","searchKeys":["averageHR","val averageHR: Double?","kjm.fit.converter.out.models.FitFileData.averageHR"]},{"name":"val averagePower: Double?","description":"kjm.fit.converter.out.models.FitFileData.averagePower","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/average-power.html","searchKeys":["averagePower","val averagePower: Double?","kjm.fit.converter.out.models.FitFileData.averagePower"]},{"name":"val averageSpeed: Double?","description":"kjm.fit.converter.out.models.FitFileData.averageSpeed","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/average-speed.html","searchKeys":["averageSpeed","val averageSpeed: Double?","kjm.fit.converter.out.models.FitFileData.averageSpeed"]},{"name":"val averageTemperature: Double?","description":"kjm.fit.converter.out.models.FitFileData.averageTemperature","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/average-temperature.html","searchKeys":["averageTemperature","val averageTemperature: Double?","kjm.fit.converter.out.models.FitFileData.averageTemperature"]},{"name":"val cadence: Double?","description":"kjm.fit.converter.out.models.LocationRecord.cadence","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/cadence.html","searchKeys":["cadence","val cadence: Double?","kjm.fit.converter.out.models.LocationRecord.cadence"]},{"name":"val description: String?","description":"kjm.fit.converter.out.models.FitProduct.description","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-product/description.html","searchKeys":["description","val description: String?","kjm.fit.converter.out.models.FitProduct.description"]},{"name":"val distance: Double?","description":"kjm.fit.converter.out.models.LocationRecord.distance","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/distance.html","searchKeys":["distance","val distance: Double?","kjm.fit.converter.out.models.LocationRecord.distance"]},{"name":"val elevation: Double?","description":"kjm.fit.converter.out.models.LocationRecord.elevation","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/elevation.html","searchKeys":["elevation","val elevation: Double?","kjm.fit.converter.out.models.LocationRecord.elevation"]},{"name":"val entries: EnumEntries<MeasurementUnit>","description":"kjm.fit.converter.utils.measurements.MeasurementUnit.entries","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.measurements/-measurement-unit/entries.html","searchKeys":["entries","val entries: EnumEntries<MeasurementUnit>","kjm.fit.converter.utils.measurements.MeasurementUnit.entries"]},{"name":"val entries: EnumEntries<ProtoBufSchemaGenerator.ProtoVersion>","description":"kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.entries","location":"kotlin-fit-converter-lib/kjm.fit.converter.utils.proto/-proto-buf-schema-generator/-proto-version/entries.html","searchKeys":["entries","val entries: EnumEntries<ProtoBufSchemaGenerator.ProtoVersion>","kjm.fit.converter.utils.proto.ProtoBufSchemaGenerator.ProtoVersion.entries"]},{"name":"val eventName: String","description":"kjm.fit.converter.out.models.FitEvent.eventName","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-event/event-name.html","searchKeys":["eventName","val eventName: String","kjm.fit.converter.out.models.FitEvent.eventName"]},{"name":"val eventType: String?","description":"kjm.fit.converter.out.models.FitEvent.eventType","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-event/event-type.html","searchKeys":["eventType","val eventType: String?","kjm.fit.converter.out.models.FitEvent.eventType"]},{"name":"val events: Set<FitEvent>","description":"kjm.fit.converter.out.models.FitFileData.events","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/events.html","searchKeys":["events","val events: Set<FitEvent>","kjm.fit.converter.out.models.FitFileData.events"]},{"name":"val frontGearNum: Int?","description":"kjm.fit.converter.out.models.FitEvent.frontGearNum","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-event/front-gear-num.html","searchKeys":["frontGearNum","val frontGearNum: Int?","kjm.fit.converter.out.models.FitEvent.frontGearNum"]},{"name":"val gpsAccuracy: Double?","description":"kjm.fit.converter.out.models.Location.gpsAccuracy","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location/gps-accuracy.html","searchKeys":["gpsAccuracy","val gpsAccuracy: Double?","kjm.fit.converter.out.models.Location.gpsAccuracy"]},{"name":"val grade: Double?","description":"kjm.fit.converter.out.models.Location.grade","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location/grade.html","searchKeys":["grade","val grade: Double?","kjm.fit.converter.out.models.Location.grade"]},{"name":"val heartRate: Double?","description":"kjm.fit.converter.out.models.LocationRecord.heartRate","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/heart-rate.html","searchKeys":["heartRate","val heartRate: Double?","kjm.fit.converter.out.models.LocationRecord.heartRate"]},{"name":"val latitude: Double","description":"kjm.fit.converter.out.models.Location.latitude","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location/latitude.html","searchKeys":["latitude","val latitude: Double","kjm.fit.converter.out.models.Location.latitude"]},{"name":"val location: Location?","description":"kjm.fit.converter.out.models.LocationRecord.location","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/location.html","searchKeys":["location","val location: Location?","kjm.fit.converter.out.models.LocationRecord.location"]},{"name":"val locationRecords: Set<LocationRecord>","description":"kjm.fit.converter.out.models.FitFileData.locationRecords","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/location-records.html","searchKeys":["locationRecords","val locationRecords: Set<LocationRecord>","kjm.fit.converter.out.models.FitFileData.locationRecords"]},{"name":"val longitude: Double","description":"kjm.fit.converter.out.models.Location.longitude","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location/longitude.html","searchKeys":["longitude","val longitude: Double","kjm.fit.converter.out.models.Location.longitude"]},{"name":"val manufacturer: String","description":"kjm.fit.converter.out.models.FitProduct.manufacturer","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-product/manufacturer.html","searchKeys":["manufacturer","val manufacturer: String","kjm.fit.converter.out.models.FitProduct.manufacturer"]},{"name":"val maxHR: Double?","description":"kjm.fit.converter.out.models.FitFileData.maxHR","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/max-h-r.html","searchKeys":["maxHR","val maxHR: Double?","kjm.fit.converter.out.models.FitFileData.maxHR"]},{"name":"val maxPower: Double?","description":"kjm.fit.converter.out.models.FitFileData.maxPower","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/max-power.html","searchKeys":["maxPower","val maxPower: Double?","kjm.fit.converter.out.models.FitFileData.maxPower"]},{"name":"val maxSpeed: Double?","description":"kjm.fit.converter.out.models.FitFileData.maxSpeed","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/max-speed.html","searchKeys":["maxSpeed","val maxSpeed: Double?","kjm.fit.converter.out.models.FitFileData.maxSpeed"]},{"name":"val power: Double?","description":"kjm.fit.converter.out.models.LocationRecord.power","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/power.html","searchKeys":["power","val power: Double?","kjm.fit.converter.out.models.LocationRecord.power"]},{"name":"val productDataConnection: String?","description":"kjm.fit.converter.out.models.FitProduct.productDataConnection","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-product/product-data-connection.html","searchKeys":["productDataConnection","val productDataConnection: String?","kjm.fit.converter.out.models.FitProduct.productDataConnection"]},{"name":"val productName: String","description":"kjm.fit.converter.out.models.FitProduct.productName","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-product/product-name.html","searchKeys":["productName","val productName: String","kjm.fit.converter.out.models.FitProduct.productName"]},{"name":"val productsUsed: Set<FitProduct>","description":"kjm.fit.converter.out.models.FitFileData.productsUsed","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/products-used.html","searchKeys":["productsUsed","val productsUsed: Set<FitProduct>","kjm.fit.converter.out.models.FitFileData.productsUsed"]},{"name":"val rearGearNum: Int?","description":"kjm.fit.converter.out.models.FitEvent.rearGearNum","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-event/rear-gear-num.html","searchKeys":["rearGearNum","val rearGearNum: Int?","kjm.fit.converter.out.models.FitEvent.rearGearNum"]},{"name":"val speed: Double?","description":"kjm.fit.converter.out.models.LocationRecord.speed","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/speed.html","searchKeys":["speed","val speed: Double?","kjm.fit.converter.out.models.LocationRecord.speed"]},{"name":"val sport: String","description":"kjm.fit.converter.out.models.FitFileData.sport","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/sport.html","searchKeys":["sport","val sport: String","kjm.fit.converter.out.models.FitFileData.sport"]},{"name":"val temperature: Double?","description":"kjm.fit.converter.out.models.LocationRecord.temperature","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/temperature.html","searchKeys":["temperature","val temperature: Double?","kjm.fit.converter.out.models.LocationRecord.temperature"]},{"name":"val timestamp: String","description":"kjm.fit.converter.out.models.LocationRecord.timestamp","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/timestamp.html","searchKeys":["timestamp","val timestamp: String","kjm.fit.converter.out.models.LocationRecord.timestamp"]},{"name":"val timestamp: String?","description":"kjm.fit.converter.out.models.FitEvent.timestamp","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-event/timestamp.html","searchKeys":["timestamp","val timestamp: String?","kjm.fit.converter.out.models.FitEvent.timestamp"]},{"name":"val totalAscent: Int?","description":"kjm.fit.converter.out.models.FitFileData.totalAscent","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/total-ascent.html","searchKeys":["totalAscent","val totalAscent: Int?","kjm.fit.converter.out.models.FitFileData.totalAscent"]},{"name":"val totalDescent: Int?","description":"kjm.fit.converter.out.models.FitFileData.totalDescent","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/total-descent.html","searchKeys":["totalDescent","val totalDescent: Int?","kjm.fit.converter.out.models.FitFileData.totalDescent"]},{"name":"val totalDistance: Double?","description":"kjm.fit.converter.out.models.FitFileData.totalDistance","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-fit-file-data/total-distance.html","searchKeys":["totalDistance","val totalDistance: Double?","kjm.fit.converter.out.models.FitFileData.totalDistance"]},{"name":"val zone: Short?","description":"kjm.fit.converter.out.models.LocationRecord.zone","location":"kotlin-fit-converter-lib/kjm.fit.converter.out.models/-location-record/zone.html","searchKeys":["zone","val zone: Short?","kjm.fit.converter.out.models.LocationRecord.zone"]}]
